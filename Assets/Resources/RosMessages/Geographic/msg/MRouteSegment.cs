//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Geographic
{
    public class MRouteSegment : Message
    {
        public const string RosMessageName = "geographic_msgs/RouteSegment";

        //  Route network segment.
        // 
        //  This is one directed edge of a RouteNetwork graph. It represents a
        //  known path from one way point to another.  If the path is two-way,
        //  there will be another RouteSegment with "start" and "end" reversed.
        public Uuid.MUniqueID id;
        //  Unique identifier for this segment
        public Uuid.MUniqueID start;
        //  beginning way point of segment
        public Uuid.MUniqueID end;
        //  ending way point of segment
        public MKeyValue[] props;
        //  segment properties

        public MRouteSegment()
        {
            this.id = new Uuid.MUniqueID();
            this.start = new Uuid.MUniqueID();
            this.end = new Uuid.MUniqueID();
            this.props = new MKeyValue[0];
        }

        public MRouteSegment(Uuid.MUniqueID id, Uuid.MUniqueID start, Uuid.MUniqueID end, MKeyValue[] props)
        {
            this.id = id;
            this.start = start;
            this.end = end;
            this.props = props;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(id.SerializationStatements());
            listOfSerializations.AddRange(start.SerializationStatements());
            listOfSerializations.AddRange(end.SerializationStatements());
            
            listOfSerializations.Add(BitConverter.GetBytes(props.Length));
            foreach(var entry in props)
                listOfSerializations.Add(entry.Serialize());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.id.Deserialize(data, offset);
            offset = this.start.Deserialize(data, offset);
            offset = this.end.Deserialize(data, offset);
            
            var propsArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.props= new MKeyValue[propsArrayLength];
            for(var i = 0; i < propsArrayLength; i++)
            {
                this.props[i] = new MKeyValue();
                offset = this.props[i].Deserialize(data, offset);
            }

            return offset;
        }

        public override string ToString()
        {
            return "MRouteSegment: " +
            "\nid: " + id.ToString() +
            "\nstart: " + start.ToString() +
            "\nend: " + end.ToString() +
            "\nprops: " + System.String.Join(", ", props.ToList());
        }
    }
}
