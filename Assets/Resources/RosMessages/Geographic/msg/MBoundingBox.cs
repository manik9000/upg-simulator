//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Geographic
{
    public class MBoundingBox : Message
    {
        public const string RosMessageName = "geographic_msgs/BoundingBox";

        //  Geographic map bounding box. 
        // 
        //  The two GeoPoints denote diagonally opposite corners of the box.
        // 
        //  If min_pt.latitude is NaN, the bounding box is "global", matching
        //  any valid latitude, longitude and altitude.
        // 
        //  If min_pt.altitude is NaN, the bounding box is two-dimensional and
        //  matches any altitude within the specified latitude and longitude
        //  range.
        public MGeoPoint min_pt;
        //  lowest and most Southwestern corner
        public MGeoPoint max_pt;
        //  highest and most Northeastern corner

        public MBoundingBox()
        {
            this.min_pt = new MGeoPoint();
            this.max_pt = new MGeoPoint();
        }

        public MBoundingBox(MGeoPoint min_pt, MGeoPoint max_pt)
        {
            this.min_pt = min_pt;
            this.max_pt = max_pt;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(min_pt.SerializationStatements());
            listOfSerializations.AddRange(max_pt.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.min_pt.Deserialize(data, offset);
            offset = this.max_pt.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "MBoundingBox: " +
            "\nmin_pt: " + min_pt.ToString() +
            "\nmax_pt: " + max_pt.ToString();
        }
    }
}
