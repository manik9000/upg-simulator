//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MVibration : Message
    {
        public const string RosMessageName = "mavros_msgs/Vibration";

        //  VIBRATION message data
        //  @description: Vibration levels and accelerometer clipping
        public Std.MHeader header;
        public Geometry.MVector3 vibration;
        //  3-axis vibration levels
        public float[] clipping;
        //  Accelerometers clipping

        public MVibration()
        {
            this.header = new Std.MHeader();
            this.vibration = new Geometry.MVector3();
            this.clipping = new float[3];
        }

        public MVibration(Std.MHeader header, Geometry.MVector3 vibration, float[] clipping)
        {
            this.header = header;
            this.vibration = vibration;
            this.clipping = clipping;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.AddRange(vibration.SerializationStatements());
            
            Array.Resize(ref clipping, 3);
            foreach(var entry in clipping)
                listOfSerializations.Add(BitConverter.GetBytes(entry));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            offset = this.vibration.Deserialize(data, offset);
            
            this.clipping= new float[3];
            for(var i = 0; i < 3; i++)
            {
                this.clipping[i] = BitConverter.ToSingle(data, offset);
                offset += 4;
            }

            return offset;
        }

        public override string ToString()
        {
            return "MVibration: " +
            "\nheader: " + header.ToString() +
            "\nvibration: " + vibration.ToString() +
            "\nclipping: " + System.String.Join(", ", clipping.ToList());
        }
    }
}
