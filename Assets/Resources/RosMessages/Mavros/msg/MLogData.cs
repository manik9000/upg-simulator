//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MLogData : Message
    {
        public const string RosMessageName = "mavros_msgs/LogData";

        //  Reply to LogRequestData, - a chunk of a log
        // 
        //   :id: - log id
        //   :offset: - offset into the log
        //   :data: - chunk of data (if zero-sized, then there are no more chunks)
        public Std.MHeader header;
        public ushort id;
        public uint offset;
        public byte[] data;

        public MLogData()
        {
            this.header = new Std.MHeader();
            this.id = 0;
            this.offset = 0;
            this.data = new byte[0];
        }

        public MLogData(Std.MHeader header, ushort id, uint offset, byte[] data)
        {
            this.header = header;
            this.id = id;
            this.offset = offset;
            this.data = data;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.id));
            listOfSerializations.Add(BitConverter.GetBytes(this.offset));
            
            listOfSerializations.Add(BitConverter.GetBytes(data.Length));
            listOfSerializations.Add(this.data);

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.id = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.offset = BitConverter.ToUInt32(data, offset);
            offset += 4;
            
            var dataArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.data= new byte[dataArrayLength];
            for(var i = 0; i < dataArrayLength; i++)
            {
                this.data[i] = data[offset];
                offset += 1;
            }

            return offset;
        }

        public override string ToString()
        {
            return "MLogData: " +
            "\nheader: " + header.ToString() +
            "\nid: " + id.ToString() +
            "\noffset: " + offset.ToString() +
            "\ndata: " + System.String.Join(", ", data.ToList());
        }
    }
}
