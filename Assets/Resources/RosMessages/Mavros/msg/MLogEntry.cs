//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Mavros
{
    public class MLogEntry : Message
    {
        public const string RosMessageName = "mavros_msgs/LogEntry";

        //  Information about a single log
        // 
        //   :id: - log id
        //   :num_logs: - total number of logs
        //   :last_log_num: - id of last log
        //   :time_utc: - UTC timestamp of log (ros::Time(0) if not available)
        //   :size: - size of log in bytes (may be approximate)
        public Std.MHeader header;
        public ushort id;
        public ushort num_logs;
        public ushort last_log_num;
        public MTime time_utc;
        public uint size;

        public MLogEntry()
        {
            this.header = new Std.MHeader();
            this.id = 0;
            this.num_logs = 0;
            this.last_log_num = 0;
            this.time_utc = new MTime();
            this.size = 0;
        }

        public MLogEntry(Std.MHeader header, ushort id, ushort num_logs, ushort last_log_num, MTime time_utc, uint size)
        {
            this.header = header;
            this.id = id;
            this.num_logs = num_logs;
            this.last_log_num = last_log_num;
            this.time_utc = time_utc;
            this.size = size;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.id));
            listOfSerializations.Add(BitConverter.GetBytes(this.num_logs));
            listOfSerializations.Add(BitConverter.GetBytes(this.last_log_num));
            listOfSerializations.AddRange(time_utc.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.size));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.id = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.num_logs = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.last_log_num = BitConverter.ToUInt16(data, offset);
            offset += 2;
            offset = this.time_utc.Deserialize(data, offset);
            this.size = BitConverter.ToUInt32(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "MLogEntry: " +
            "\nheader: " + header.ToString() +
            "\nid: " + id.ToString() +
            "\nnum_logs: " + num_logs.ToString() +
            "\nlast_log_num: " + last_log_num.ToString() +
            "\ntime_utc: " + time_utc.ToString() +
            "\nsize: " + size.ToString();
        }
    }
}
