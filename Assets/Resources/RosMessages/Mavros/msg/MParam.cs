//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MParam : Message
    {
        public const string RosMessageName = "mavros_msgs/Param";

        //  Parameter msg.
        public Std.MHeader header;
        public string param_id;
        public MParamValue value;
        public ushort param_index;
        public ushort param_count;

        public MParam()
        {
            this.header = new Std.MHeader();
            this.param_id = "";
            this.value = new MParamValue();
            this.param_index = 0;
            this.param_count = 0;
        }

        public MParam(Std.MHeader header, string param_id, MParamValue value, ushort param_index, ushort param_count)
        {
            this.header = header;
            this.param_id = param_id;
            this.value = value;
            this.param_index = param_index;
            this.param_count = param_count;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(SerializeString(this.param_id));
            listOfSerializations.AddRange(value.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.param_index));
            listOfSerializations.Add(BitConverter.GetBytes(this.param_count));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            var param_idStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.param_id = DeserializeString(data, offset, param_idStringBytesLength);
            offset += param_idStringBytesLength;
            offset = this.value.Deserialize(data, offset);
            this.param_index = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.param_count = BitConverter.ToUInt16(data, offset);
            offset += 2;

            return offset;
        }

        public override string ToString()
        {
            return "MParam: " +
            "\nheader: " + header.ToString() +
            "\nparam_id: " + param_id.ToString() +
            "\nvalue: " + value.ToString() +
            "\nparam_index: " + param_index.ToString() +
            "\nparam_count: " + param_count.ToString();
        }
    }
}
