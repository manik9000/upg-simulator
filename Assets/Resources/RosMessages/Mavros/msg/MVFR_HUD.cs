//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MVFR_HUD : Message
    {
        public const string RosMessageName = "mavros_msgs/VFR_HUD";

        //  Metrics typically displayed on a HUD for fixed wing aircraft
        // 
        //  VFR_HUD message
        public Std.MHeader header;
        public float airspeed;
        //  m/s
        public float groundspeed;
        //  m/s
        public short heading;
        //  degrees 0..360
        public float throttle;
        //  normalized to 0.0..1.0
        public float altitude;
        //  MSL
        public float climb;
        //  current climb rate m/s

        public MVFR_HUD()
        {
            this.header = new Std.MHeader();
            this.airspeed = 0.0f;
            this.groundspeed = 0.0f;
            this.heading = 0;
            this.throttle = 0.0f;
            this.altitude = 0.0f;
            this.climb = 0.0f;
        }

        public MVFR_HUD(Std.MHeader header, float airspeed, float groundspeed, short heading, float throttle, float altitude, float climb)
        {
            this.header = header;
            this.airspeed = airspeed;
            this.groundspeed = groundspeed;
            this.heading = heading;
            this.throttle = throttle;
            this.altitude = altitude;
            this.climb = climb;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.airspeed));
            listOfSerializations.Add(BitConverter.GetBytes(this.groundspeed));
            listOfSerializations.Add(BitConverter.GetBytes(this.heading));
            listOfSerializations.Add(BitConverter.GetBytes(this.throttle));
            listOfSerializations.Add(BitConverter.GetBytes(this.altitude));
            listOfSerializations.Add(BitConverter.GetBytes(this.climb));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.airspeed = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.groundspeed = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.heading = BitConverter.ToInt16(data, offset);
            offset += 2;
            this.throttle = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.altitude = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.climb = BitConverter.ToSingle(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "MVFR_HUD: " +
            "\nheader: " + header.ToString() +
            "\nairspeed: " + airspeed.ToString() +
            "\ngroundspeed: " + groundspeed.ToString() +
            "\nheading: " + heading.ToString() +
            "\nthrottle: " + throttle.ToString() +
            "\naltitude: " + altitude.ToString() +
            "\nclimb: " + climb.ToString();
        }
    }
}
