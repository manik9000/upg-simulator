//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MEstimatorStatus : Message
    {
        public const string RosMessageName = "mavros_msgs/EstimatorStatus";

        //  Current autopilot estimator state
        // 
        //  https://mavlink.io/en/messages/common.html#ESTIMATOR_STATUS_FLAGS
        public Std.MHeader header;
        public bool attitude_status_flag;
        public bool velocity_horiz_status_flag;
        public bool velocity_vert_status_flag;
        public bool pos_horiz_rel_status_flag;
        public bool pos_horiz_abs_status_flag;
        public bool pos_vert_abs_status_flag;
        public bool pos_vert_agl_status_flag;
        public bool const_pos_mode_status_flag;
        public bool pred_pos_horiz_rel_status_flag;
        public bool pred_pos_horiz_abs_status_flag;
        public bool gps_glitch_status_flag;
        public bool accel_error_status_flag;

        public MEstimatorStatus()
        {
            this.header = new Std.MHeader();
            this.attitude_status_flag = false;
            this.velocity_horiz_status_flag = false;
            this.velocity_vert_status_flag = false;
            this.pos_horiz_rel_status_flag = false;
            this.pos_horiz_abs_status_flag = false;
            this.pos_vert_abs_status_flag = false;
            this.pos_vert_agl_status_flag = false;
            this.const_pos_mode_status_flag = false;
            this.pred_pos_horiz_rel_status_flag = false;
            this.pred_pos_horiz_abs_status_flag = false;
            this.gps_glitch_status_flag = false;
            this.accel_error_status_flag = false;
        }

        public MEstimatorStatus(Std.MHeader header, bool attitude_status_flag, bool velocity_horiz_status_flag, bool velocity_vert_status_flag, bool pos_horiz_rel_status_flag, bool pos_horiz_abs_status_flag, bool pos_vert_abs_status_flag, bool pos_vert_agl_status_flag, bool const_pos_mode_status_flag, bool pred_pos_horiz_rel_status_flag, bool pred_pos_horiz_abs_status_flag, bool gps_glitch_status_flag, bool accel_error_status_flag)
        {
            this.header = header;
            this.attitude_status_flag = attitude_status_flag;
            this.velocity_horiz_status_flag = velocity_horiz_status_flag;
            this.velocity_vert_status_flag = velocity_vert_status_flag;
            this.pos_horiz_rel_status_flag = pos_horiz_rel_status_flag;
            this.pos_horiz_abs_status_flag = pos_horiz_abs_status_flag;
            this.pos_vert_abs_status_flag = pos_vert_abs_status_flag;
            this.pos_vert_agl_status_flag = pos_vert_agl_status_flag;
            this.const_pos_mode_status_flag = const_pos_mode_status_flag;
            this.pred_pos_horiz_rel_status_flag = pred_pos_horiz_rel_status_flag;
            this.pred_pos_horiz_abs_status_flag = pred_pos_horiz_abs_status_flag;
            this.gps_glitch_status_flag = gps_glitch_status_flag;
            this.accel_error_status_flag = accel_error_status_flag;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.attitude_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.velocity_horiz_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.velocity_vert_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.pos_horiz_rel_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.pos_horiz_abs_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.pos_vert_abs_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.pos_vert_agl_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.const_pos_mode_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.pred_pos_horiz_rel_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.pred_pos_horiz_abs_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.gps_glitch_status_flag));
            listOfSerializations.Add(BitConverter.GetBytes(this.accel_error_status_flag));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.attitude_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.velocity_horiz_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.velocity_vert_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.pos_horiz_rel_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.pos_horiz_abs_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.pos_vert_abs_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.pos_vert_agl_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.const_pos_mode_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.pred_pos_horiz_rel_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.pred_pos_horiz_abs_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.gps_glitch_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.accel_error_status_flag = BitConverter.ToBoolean(data, offset);
            offset += 1;

            return offset;
        }

        public override string ToString()
        {
            return "MEstimatorStatus: " +
            "\nheader: " + header.ToString() +
            "\nattitude_status_flag: " + attitude_status_flag.ToString() +
            "\nvelocity_horiz_status_flag: " + velocity_horiz_status_flag.ToString() +
            "\nvelocity_vert_status_flag: " + velocity_vert_status_flag.ToString() +
            "\npos_horiz_rel_status_flag: " + pos_horiz_rel_status_flag.ToString() +
            "\npos_horiz_abs_status_flag: " + pos_horiz_abs_status_flag.ToString() +
            "\npos_vert_abs_status_flag: " + pos_vert_abs_status_flag.ToString() +
            "\npos_vert_agl_status_flag: " + pos_vert_agl_status_flag.ToString() +
            "\nconst_pos_mode_status_flag: " + const_pos_mode_status_flag.ToString() +
            "\npred_pos_horiz_rel_status_flag: " + pred_pos_horiz_rel_status_flag.ToString() +
            "\npred_pos_horiz_abs_status_flag: " + pred_pos_horiz_abs_status_flag.ToString() +
            "\ngps_glitch_status_flag: " + gps_glitch_status_flag.ToString() +
            "\naccel_error_status_flag: " + accel_error_status_flag.ToString();
        }
    }
}
