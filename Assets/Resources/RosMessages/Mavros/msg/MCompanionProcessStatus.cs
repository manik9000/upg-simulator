//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MCompanionProcessStatus : Message
    {
        public const string RosMessageName = "mavros_msgs/CompanionProcessStatus";

        //  Mavros message: COMPANIONPROCESSSTATUS
        public Std.MHeader header;
        public byte state;
        //  See enum COMPANION_PROCESS_STATE
        public byte component;
        //  See enum MAV_COMPONENT
        public const byte MAV_STATE_UNINIT = 0;
        public const byte MAV_STATE_BOOT = 1;
        public const byte MAV_STATE_CALIBRATING = 2;
        public const byte MAV_STATE_STANDBY = 3;
        public const byte MAV_STATE_ACTIVE = 4;
        public const byte MAV_STATE_CRITICAL = 5;
        public const byte MAV_STATE_EMERGENCY = 6;
        public const byte MAV_STATE_POWEROFF = 7;
        public const byte MAV_STATE_FLIGHT_TERMINATION = 8;
        public const byte MAV_COMP_ID_OBSTACLE_AVOIDANCE = 196;
        public const byte MAV_COMP_ID_VISUAL_INERTIAL_ODOMETRY = 197;

        public MCompanionProcessStatus()
        {
            this.header = new Std.MHeader();
            this.state = 0;
            this.component = 0;
        }

        public MCompanionProcessStatus(Std.MHeader header, byte state, byte component)
        {
            this.header = header;
            this.state = state;
            this.component = component;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(new[]{this.state});
            listOfSerializations.Add(new[]{this.component});

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.state = data[offset];;
            offset += 1;
            this.component = data[offset];;
            offset += 1;

            return offset;
        }

        public override string ToString()
        {
            return "MCompanionProcessStatus: " +
            "\nheader: " + header.ToString() +
            "\nstate: " + state.ToString() +
            "\ncomponent: " + component.ToString();
        }
    }
}
