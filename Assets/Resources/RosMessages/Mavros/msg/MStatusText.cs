//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MStatusText : Message
    {
        public const string RosMessageName = "mavros_msgs/StatusText";

        //  STATUSTEXT message representation
        //  https://mavlink.io/en/messages/common.html#STATUSTEXT
        //  Severity levels
        public const byte EMERGENCY = 0;
        public const byte ALERT = 1;
        public const byte CRITICAL = 2;
        public const byte ERROR = 3;
        public const byte WARNING = 4;
        public const byte NOTICE = 5;
        public const byte INFO = 6;
        public const byte DEBUG = 7;
        //  Fields
        public Std.MHeader header;
        public byte severity;
        public string text;

        public MStatusText()
        {
            this.header = new Std.MHeader();
            this.severity = 0;
            this.text = "";
        }

        public MStatusText(Std.MHeader header, byte severity, string text)
        {
            this.header = header;
            this.severity = severity;
            this.text = text;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(new[]{this.severity});
            listOfSerializations.Add(SerializeString(this.text));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.severity = data[offset];;
            offset += 1;
            var textStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.text = DeserializeString(data, offset, textStringBytesLength);
            offset += textStringBytesLength;

            return offset;
        }

        public override string ToString()
        {
            return "MStatusText: " +
            "\nheader: " + header.ToString() +
            "\nseverity: " + severity.ToString() +
            "\ntext: " + text.ToString();
        }
    }
}
