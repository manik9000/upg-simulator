//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MRadioStatus : Message
    {
        public const string RosMessageName = "mavros_msgs/RadioStatus";

        //  RADIO_STATUS message
        public Std.MHeader header;
        //  message data
        public byte rssi;
        public byte remrssi;
        public byte txbuf;
        public byte noise;
        public byte remnoise;
        public ushort rxerrors;
        public ushort @fixed;
        //  calculated
        public float rssi_dbm;
        public float remrssi_dbm;

        public MRadioStatus()
        {
            this.header = new Std.MHeader();
            this.rssi = 0;
            this.remrssi = 0;
            this.txbuf = 0;
            this.noise = 0;
            this.remnoise = 0;
            this.rxerrors = 0;
            this.@fixed = 0;
            this.rssi_dbm = 0.0f;
            this.remrssi_dbm = 0.0f;
        }

        public MRadioStatus(Std.MHeader header, byte rssi, byte remrssi, byte txbuf, byte noise, byte remnoise, ushort rxerrors, ushort @fixed, float rssi_dbm, float remrssi_dbm)
        {
            this.header = header;
            this.rssi = rssi;
            this.remrssi = remrssi;
            this.txbuf = txbuf;
            this.noise = noise;
            this.remnoise = remnoise;
            this.rxerrors = rxerrors;
            this.@fixed = @fixed;
            this.rssi_dbm = rssi_dbm;
            this.remrssi_dbm = remrssi_dbm;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(new[]{this.rssi});
            listOfSerializations.Add(new[]{this.remrssi});
            listOfSerializations.Add(new[]{this.txbuf});
            listOfSerializations.Add(new[]{this.noise});
            listOfSerializations.Add(new[]{this.remnoise});
            listOfSerializations.Add(BitConverter.GetBytes(this.rxerrors));
            listOfSerializations.Add(BitConverter.GetBytes(this.@fixed));
            listOfSerializations.Add(BitConverter.GetBytes(this.rssi_dbm));
            listOfSerializations.Add(BitConverter.GetBytes(this.remrssi_dbm));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.rssi = data[offset];;
            offset += 1;
            this.remrssi = data[offset];;
            offset += 1;
            this.txbuf = data[offset];;
            offset += 1;
            this.noise = data[offset];;
            offset += 1;
            this.remnoise = data[offset];;
            offset += 1;
            this.rxerrors = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.@fixed = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.rssi_dbm = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.remrssi_dbm = BitConverter.ToSingle(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "MRadioStatus: " +
            "\nheader: " + header.ToString() +
            "\nrssi: " + rssi.ToString() +
            "\nremrssi: " + remrssi.ToString() +
            "\ntxbuf: " + txbuf.ToString() +
            "\nnoise: " + noise.ToString() +
            "\nremnoise: " + remnoise.ToString() +
            "\nrxerrors: " + rxerrors.ToString() +
            "\n@fixed: " + @fixed.ToString() +
            "\nrssi_dbm: " + rssi_dbm.ToString() +
            "\nremrssi_dbm: " + remrssi_dbm.ToString();
        }
    }
}
