//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MSetModeRequest : Message
    {
        public const string RosMessageName = "mavros_msgs/SetMode";

        //  set FCU mode
        // 
        //  Known custom modes listed here:
        //  http://wiki.ros.org/mavros/CustomModes
        //  basic modes from MAV_MODE
        public const byte MAV_MODE_PREFLIGHT = 0;
        public const byte MAV_MODE_STABILIZE_DISARMED = 80;
        public const byte MAV_MODE_STABILIZE_ARMED = 208;
        public const byte MAV_MODE_MANUAL_DISARMED = 64;
        public const byte MAV_MODE_MANUAL_ARMED = 192;
        public const byte MAV_MODE_GUIDED_DISARMED = 88;
        public const byte MAV_MODE_GUIDED_ARMED = 216;
        public const byte MAV_MODE_AUTO_DISARMED = 92;
        public const byte MAV_MODE_AUTO_ARMED = 220;
        public const byte MAV_MODE_TEST_DISARMED = 66;
        public const byte MAV_MODE_TEST_ARMED = 194;
        public byte base_mode;
        //  filled by MAV_MODE enum value or 0 if custom_mode != ''
        public string custom_mode;
        //  string mode representation or integer

        public MSetModeRequest()
        {
            this.base_mode = 0;
            this.custom_mode = "";
        }

        public MSetModeRequest(byte base_mode, string custom_mode)
        {
            this.base_mode = base_mode;
            this.custom_mode = custom_mode;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(new[]{this.base_mode});
            listOfSerializations.Add(SerializeString(this.custom_mode));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.base_mode = data[offset];;
            offset += 1;
            var custom_modeStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.custom_mode = DeserializeString(data, offset, custom_modeStringBytesLength);
            offset += custom_modeStringBytesLength;

            return offset;
        }

        public override string ToString()
        {
            return "MSetModeRequest: " +
            "\nbase_mode: " + base_mode.ToString() +
            "\ncustom_mode: " + custom_mode.ToString();
        }
    }
}
