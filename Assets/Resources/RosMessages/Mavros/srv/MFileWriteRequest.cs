//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MFileWriteRequest : Message
    {
        public const string RosMessageName = "mavros_msgs/FileWrite";

        //  FTP::Write
        // 
        //  Call FTP::Open first.
        //  :success:	indicates success end of request
        //  :r_errno:	remote errno if applicapable
        public string file_path;
        public ulong offset;
        public byte[] data;

        public MFileWriteRequest()
        {
            this.file_path = "";
            this.offset = 0;
            this.data = new byte[0];
        }

        public MFileWriteRequest(string file_path, ulong offset, byte[] data)
        {
            this.file_path = file_path;
            this.offset = offset;
            this.data = data;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(SerializeString(this.file_path));
            listOfSerializations.Add(BitConverter.GetBytes(this.offset));
            
            listOfSerializations.Add(BitConverter.GetBytes(data.Length));
            listOfSerializations.Add(this.data);

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            var file_pathStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.file_path = DeserializeString(data, offset, file_pathStringBytesLength);
            offset += file_pathStringBytesLength;
            this.offset = BitConverter.ToUInt64(data, offset);
            offset += 8;
            
            var dataArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.data= new byte[dataArrayLength];
            for(var i = 0; i < dataArrayLength; i++)
            {
                this.data[i] = data[offset];
                offset += 1;
            }

            return offset;
        }

        public override string ToString()
        {
            return "MFileWriteRequest: " +
            "\nfile_path: " + file_path.ToString() +
            "\noffset: " + offset.ToString() +
            "\ndata: " + System.String.Join(", ", data.ToList());
        }
    }
}
