//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MStreamRateRequest : Message
    {
        public const string RosMessageName = "mavros_msgs/StreamRate";

        //  sets stream rate
        //  See REQUEST_DATA_STREAM message
        public const byte STREAM_ALL = 0;
        public const byte STREAM_RAW_SENSORS = 1;
        public const byte STREAM_EXTENDED_STATUS = 2;
        public const byte STREAM_RC_CHANNELS = 3;
        public const byte STREAM_RAW_CONTROLLER = 4;
        public const byte STREAM_POSITION = 6;
        public const byte STREAM_EXTRA1 = 10;
        public const byte STREAM_EXTRA2 = 11;
        public const byte STREAM_EXTRA3 = 12;
        public byte stream_id;
        public ushort message_rate;
        public bool on_off;

        public MStreamRateRequest()
        {
            this.stream_id = 0;
            this.message_rate = 0;
            this.on_off = false;
        }

        public MStreamRateRequest(byte stream_id, ushort message_rate, bool on_off)
        {
            this.stream_id = stream_id;
            this.message_rate = message_rate;
            this.on_off = on_off;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(new[]{this.stream_id});
            listOfSerializations.Add(BitConverter.GetBytes(this.message_rate));
            listOfSerializations.Add(BitConverter.GetBytes(this.on_off));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.stream_id = data[offset];;
            offset += 1;
            this.message_rate = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.on_off = BitConverter.ToBoolean(data, offset);
            offset += 1;

            return offset;
        }

        public override string ToString()
        {
            return "MStreamRateRequest: " +
            "\nstream_id: " + stream_id.ToString() +
            "\nmessage_rate: " + message_rate.ToString() +
            "\non_off: " + on_off.ToString();
        }
    }
}
