//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MCommandTOLRequest : Message
    {
        public const string RosMessageName = "mavros_msgs/CommandTOL";

        //  Common type for Take Off and Landing
        public float min_pitch;
        //  used by takeoff
        public float yaw;
        public float latitude;
        public float longitude;
        public float altitude;

        public MCommandTOLRequest()
        {
            this.min_pitch = 0.0f;
            this.yaw = 0.0f;
            this.latitude = 0.0f;
            this.longitude = 0.0f;
            this.altitude = 0.0f;
        }

        public MCommandTOLRequest(float min_pitch, float yaw, float latitude, float longitude, float altitude)
        {
            this.min_pitch = min_pitch;
            this.yaw = yaw;
            this.latitude = latitude;
            this.longitude = longitude;
            this.altitude = altitude;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.min_pitch));
            listOfSerializations.Add(BitConverter.GetBytes(this.yaw));
            listOfSerializations.Add(BitConverter.GetBytes(this.latitude));
            listOfSerializations.Add(BitConverter.GetBytes(this.longitude));
            listOfSerializations.Add(BitConverter.GetBytes(this.altitude));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.min_pitch = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.yaw = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.latitude = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.longitude = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.altitude = BitConverter.ToSingle(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "MCommandTOLRequest: " +
            "\nmin_pitch: " + min_pitch.ToString() +
            "\nyaw: " + yaw.ToString() +
            "\nlatitude: " + latitude.ToString() +
            "\nlongitude: " + longitude.ToString() +
            "\naltitude: " + altitude.ToString();
        }
    }
}
