//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mavros
{
    public class MCommandLongRequest : Message
    {
        public const string RosMessageName = "mavros_msgs/CommandLong";

        //  Generic COMMAND_LONG
        public bool broadcast;
        //  send this command in broadcast mode
        public ushort command;
        public byte confirmation;
        public float param1;
        public float param2;
        public float param3;
        public float param4;
        public float param5;
        //  x_lat
        public float param6;
        //  y_lon
        public float param7;
        //  z_alt

        public MCommandLongRequest()
        {
            this.broadcast = false;
            this.command = 0;
            this.confirmation = 0;
            this.param1 = 0.0f;
            this.param2 = 0.0f;
            this.param3 = 0.0f;
            this.param4 = 0.0f;
            this.param5 = 0.0f;
            this.param6 = 0.0f;
            this.param7 = 0.0f;
        }

        public MCommandLongRequest(bool broadcast, ushort command, byte confirmation, float param1, float param2, float param3, float param4, float param5, float param6, float param7)
        {
            this.broadcast = broadcast;
            this.command = command;
            this.confirmation = confirmation;
            this.param1 = param1;
            this.param2 = param2;
            this.param3 = param3;
            this.param4 = param4;
            this.param5 = param5;
            this.param6 = param6;
            this.param7 = param7;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.broadcast));
            listOfSerializations.Add(BitConverter.GetBytes(this.command));
            listOfSerializations.Add(new[]{this.confirmation});
            listOfSerializations.Add(BitConverter.GetBytes(this.param1));
            listOfSerializations.Add(BitConverter.GetBytes(this.param2));
            listOfSerializations.Add(BitConverter.GetBytes(this.param3));
            listOfSerializations.Add(BitConverter.GetBytes(this.param4));
            listOfSerializations.Add(BitConverter.GetBytes(this.param5));
            listOfSerializations.Add(BitConverter.GetBytes(this.param6));
            listOfSerializations.Add(BitConverter.GetBytes(this.param7));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.broadcast = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.command = BitConverter.ToUInt16(data, offset);
            offset += 2;
            this.confirmation = data[offset];;
            offset += 1;
            this.param1 = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.param2 = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.param3 = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.param4 = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.param5 = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.param6 = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.param7 = BitConverter.ToSingle(data, offset);
            offset += 4;

            return offset;
        }

        public override string ToString()
        {
            return "MCommandLongRequest: " +
            "\nbroadcast: " + broadcast.ToString() +
            "\ncommand: " + command.ToString() +
            "\nconfirmation: " + confirmation.ToString() +
            "\nparam1: " + param1.ToString() +
            "\nparam2: " + param2.ToString() +
            "\nparam3: " + param3.ToString() +
            "\nparam4: " + param4.ToString() +
            "\nparam5: " + param5.ToString() +
            "\nparam6: " + param6.ToString() +
            "\nparam7: " + param7.ToString();
        }
    }
}
